<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kehao.lems.dao.UserMapper">
    <resultMap id="BaseResultMap" type="org.kehao.lems.entity.User">
        <id column="uid" jdbcType="CHAR" property="uid"/>
        <result column="uname" jdbcType="VARCHAR" property="uname"/>
        <result column="ture_name" jdbcType="VARCHAR" property="tureName"/>
        <result column="passwd" jdbcType="CHAR" property="passwd"/>
        <result column="salt" jdbcType="CHAR" property="salt"/>
        <result column="office_address" jdbcType="VARCHAR" property="officeAddress"/>
        <result column="office_phone" jdbcType="VARCHAR" property="officePhone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="masterid" jdbcType="CHAR" property="masterid"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="token" jdbcType="CHAR" property="token"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
      uid, uname, ture_name, passwd, salt, office_address, office_phone, email, masterid, createtime,token,status
    </sql>

    <!-- 自定义映射关系 -->
    <resultMap id="User_URole_Jion_Map" type="org.kehao.lems.entity.User">
        <id column="uid" jdbcType="CHAR" property="uid"/>
        <result column="uname" jdbcType="VARCHAR" property="uname"/>
        <result column="ture_name" jdbcType="VARCHAR" property="tureName"/>
        <result column="passwd" jdbcType="CHAR" property="passwd"/>
        <result column="salt" jdbcType="CHAR" property="salt"/>
        <result column="office_address" jdbcType="VARCHAR" property="officeAddress"/>
        <result column="office_phone" jdbcType="VARCHAR" property="officePhone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="masterid" jdbcType="CHAR" property="masterid"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="token" jdbcType="CHAR" property="token"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <!-- 关联 属性 equPurchase装载 -->
        <association property="userRole" javaType="org.kehao.lems.entity.UserRole"><!-- 对象关联 -->
            <result column="uid" jdbcType="CHAR" property="uid" />
            <result column="rid" jdbcType="INTEGER" property="rid" />
        </association>
    </resultMap>

    <sql id="Jion_User_URole_Column_List">
        user.uid, uname, ture_name, passwd, salt, office_address, office_phone, email, masterid, createtime,token,status, rid
    </sql>


    <!-- 自定义映射关系 -->
    <resultMap id="User_Role_Jion_Map" type="org.kehao.lems.entity.User">
        <id column="uid" jdbcType="CHAR" property="uid"/>
        <result column="uname" jdbcType="VARCHAR" property="uname"/>
        <result column="ture_name" jdbcType="VARCHAR" property="tureName"/>
        <result column="passwd" jdbcType="CHAR" property="passwd"/>
        <result column="salt" jdbcType="CHAR" property="salt"/>
        <result column="office_address" jdbcType="VARCHAR" property="officeAddress"/>
        <result column="office_phone" jdbcType="VARCHAR" property="officePhone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="masterid" jdbcType="CHAR" property="masterid"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="token" jdbcType="CHAR" property="token"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <!-- 关联 属性 userRole -->
        <association property="userRole" javaType="org.kehao.lems.entity.UserRole"><!-- 对象关联 -->
            <result column="uid" jdbcType="CHAR" property="uid" />
            <result column="rid" jdbcType="INTEGER" property="rid" />
            <!-- 关联 属性 role -->
            <association property="role" javaType="org.kehao.lems.entity.Role"><!-- 对象关联 -->
                <id column="rid" jdbcType="INTEGER" property="rid" />
                <result column="rname" jdbcType="VARCHAR" property="rname" />
                <result column="remark" jdbcType="VARCHAR" property="remark" />
            </association>
        </association>
    </resultMap>

    <sql id="Jion_User_Role_Column_List">
        user.uid,uname, ture_name, office_address, office_phone, email, masterid, token,createtime,status,rname, remark
    </sql>


    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_user
        where uid = #{uid,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from s_user
        where uid = #{uid,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="org.kehao.lems.entity.User">
        insert into s_user (uid, uname, ture_name,
          passwd, salt,
          office_address, office_phone, email,
          masterid, createtime,token,status)
        values (#{uid,jdbcType=CHAR}, #{uname,jdbcType=VARCHAR}, #{tureName,jdbcType=VARCHAR},
          #{passwd,jdbcType=CHAR}, #{salt,jdbcType=CHAR},
          #{officeAddress,jdbcType=VARCHAR}, #{officePhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
          #{masterid,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP},#{token,jdbcType=CHAR}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="org.kehao.lems.entity.User">
        insert into s_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="uname != null">
                uname,
            </if>
            <if test="tureName != null">
                ture_name,
            </if>
            <if test="passwd != null">
                passwd,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="officeAddress != null">
                office_address,
            </if>
            <if test="officePhone != null">
                office_phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="masterid != null">
                masterid,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=CHAR},
            </if>
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
            <if test="tureName != null">
                #{tureName,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                #{passwd,jdbcType=CHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=CHAR},
            </if>
            <if test="officeAddress != null">
                #{officeAddress,jdbcType=VARCHAR},
            </if>
            <if test="officePhone != null">
                #{officePhone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="masterid != null">
                #{masterid,jdbcType=CHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="token != null">
                #{token,jdbcType=CHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.kehao.lems.entity.User">
        update s_user
        <set>
            <if test="uname != null">
                uname = #{uname,jdbcType=VARCHAR},
            </if>
            <if test="tureName != null">
                ture_name = #{tureName,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                passwd = #{passwd,jdbcType=CHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=CHAR},
            </if>
            <if test="officeAddress != null">
                office_address = #{officeAddress,jdbcType=VARCHAR},
            </if>
            <if test="officePhone != null">
                office_phone = #{officePhone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="masterid != null">
                masterid = #{masterid,jdbcType=CHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=CHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where uid = #{uid,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.kehao.lems.entity.User">
        update s_user
        set uname = #{uname,jdbcType=VARCHAR},
          ture_name = #{tureName,jdbcType=VARCHAR},
          passwd = #{passwd,jdbcType=CHAR},
          salt = #{salt,jdbcType=CHAR},
          office_address = #{officeAddress,jdbcType=VARCHAR},
          office_phone = #{officePhone,jdbcType=VARCHAR},
          email = #{email,jdbcType=VARCHAR},
          masterid = #{masterid,jdbcType=CHAR},
          createtime = #{createtime,jdbcType=TIMESTAMP},
          token = #{token,jdbcType=CHAR},
          status = #{status,jdbcType=INTEGER},
        where uid = #{uid,jdbcType=CHAR}
    </update>
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_user
        where uname = #{uname,jdbcType=CHAR}
    </select>
    <update id="updateTokenByUid" parameterType="map">
      update s_user set token = #{token,jdbcType=CHAR} where uid = #{uid,jdbcType=CHAR}
  </update>
    <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_user
        where email = #{email,jdbcType=VARCHAR}
    </select>

    <update id="updateByUserNameSelective" parameterType="org.kehao.lems.entity.User">
        update s_user
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=CHAR},
            </if>
            <if test="tureName != null">
                ture_name = #{tureName,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                passwd = #{passwd,jdbcType=CHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=CHAR},
            </if>
            <if test="officeAddress != null">
                office_address = #{officeAddress,jdbcType=VARCHAR},
            </if>
            <if test="officePhone != null">
                office_phone = #{officePhone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="masterid != null">
                masterid = #{masterid,jdbcType=CHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=CHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where uname = #{uname,jdbcType=VARCHAR}
    </update>

    <select id="selectURloeByUid" parameterType="java.lang.String" resultMap="User_URole_Jion_Map">
        select
        <include refid="Jion_User_URole_Column_List"/>
        from s_user user join user_role urole on(user.uid=urole.uid)
        where user.uid = #{uid,jdbcType=CHAR}
    </select>

    <select id="selectRloeByUid" parameterType="java.lang.String" resultMap="User_Role_Jion_Map">
        select
        <include refid="Jion_User_Role_Column_List"/>
        from s_user user join user_role urole on(user.uid=urole.uid) join s_role role on(urole.rid=role.rid)
        where user.uid = #{uid,jdbcType=CHAR}
    </select>

    <select id="selectUserCondition" parameterType="java.util.Map" resultMap="User_Role_Jion_Map">
        select
        <include refid="Jion_User_Role_Column_List"/>
        from s_user user left join user_role urole on(user.uid=urole.uid) left join s_role role on(urole.rid=role.rid)
        where user.status !='1'
        <if test="userEx.uname != null">
            AND user.uname LIKE concat(concat('%',#{userEx.uname,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userEx.tureName != null">
            AND user.ture_name LIKE concat(concat('%',#{userEx.tureName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userEx.createtimeStart != null">
            AND user.createtime &gt;= #{userEx.createtimeStart,jdbcType=TIMESTAMP}
        </if>
        <if test="userEx.createtimeEnd != null">
            AND user.createtime &lt;= #{userEx.createtimeEnd,jdbcType=TIMESTAMP}
        </if>
        <if test="userEx.rname!=null">
            AND role.rname LIKE concat(concat('%',#{userEx.rname,jdbcType=VARCHAR}),'%')
        </if>
        <if test="sort!=null">
            ORDER BY ${sort} ${order}
        </if>
        LIMIT #{startRec,jdbcType=INTEGER},#{recCount,jdbcType=INTEGER}
    </select>
    <select id="selectUserConditionCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select COUNT(*)
        from s_user user left join user_role urole on(user.uid=urole.uid) left join s_role role on(urole.rid=role.rid)
        where user.status !='1'
        <if test="userEx.uname != null">
            AND user.uname LIKE concat(concat('%',#{userEx.uname,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userEx.tureName != null">
            AND user.ture_name LIKE concat(concat('%',#{userEx.tureName,jdbcType=VARCHAR}),'%')
        </if>
        <if test="userEx.createtimeStart != null">
            AND user.createtime &gt;= #{userEx.createtimeStart,jdbcType=TIMESTAMP}
        </if>
        <if test="userEx.createtimeEnd != null">
            AND user.createtime &lt;= #{userEx.createtimeEnd,jdbcType=TIMESTAMP}
        </if>
        <if test="userEx.rname!=null">
            AND role.rname LIKE concat(concat('%',#{userEx.rname,jdbcType=VARCHAR}),'%')
        </if>
    </select>

    <update id="updateUserStatusByUid" parameterType="java.util.Map">
        UPDATE s_user SET status = #{status} WHERE uid IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <sql id="Info_Column_List">
        uid, uname, ture_name,  office_address, office_phone, email, masterid, createtime,status
    </sql>
    <select id="selectAllUser" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Info_Column_List"/>
        from s_user
        where status = #{status,jdbcType=CHAR}
    </select>

</mapper>